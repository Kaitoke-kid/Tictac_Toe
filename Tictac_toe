import itertools
from colorama import Fore, Back, Style, init
init()
# def check(n):
#     if n.count(n[0]) == len(n) and n[0] != 0:
#         print("winner!")


def win(game):
    def all_same(list):
        if list.count(list[0]) == len(list) and list[0] != 0:
            return True
        else:
            return False

    count = 0
    for i in range(0, len(game)):
        for j in range(0, len(game[0])):
            if game[i][j] == 0:
                count += 1
    if count == 0:
        print("Game is tie..!!")
        return True

    # horizontal
    for row in game:
        if all_same(row):
            print(f"Player {row[0]} is the winner horizontally")
            return True

    # vertical
    for i in range(0,len(game)):
        check = []
        for row in game:
            check.append(row[i])
        if all_same(check):
            print(f"Player {row[0]} is the winner vertically")
            return True

    # Diagonal
    check = []
    for i in range(len(game)):
        check.append(game[i][i])
    if all_same(check):
        print(f"Player {check[0]} is the winner Diagonally (\\)")
        return True

    check = []
    for col,row in enumerate(reversed(range(len(game)))):
        check.append(game[row][col])
    if all_same(check):
        print(f"Player {check[0]} is the winner Diagonally (/)")
        return True
    return False


def game_board(game,player=0,row=0,col=0,just_display =False):
    try:
        s = " "
        for i in range(len(game)):
            s += "  " + str(i)
        print(s)
        if game[row][col] != 0:
            print("Someone played there move on this position, you can't update it")
            return game, False
        if not just_display:
            game[row][col] = player
        for count, row in enumerate(game):
            coloured_row = ""
            for item in row:
                if item == 0:
                    coloured_row += " 0 "
                elif item == 1:
                    coloured_row += Fore.GREEN + " X " + Style.RESET_ALL
                elif item == 2:
                    coloured_row += Fore.RED + " O " + Style.RESET_ALL
            print(count, coloured_row)
        return game, True

    except Exception as e:
        print("Something went wrong!", e)
        return game, False


play = True
players = [1, 2]
while play:
    game_size = int(input("Which size of game do you want? "))
    game = []
    for i in range(game_size):
        row = []
        for j in range(game_size):
            row.append(0)
        game.append(row)
    game_won = False
    game, _ = game_board(game,just_display=True)
    player_choice = itertools.cycle([1, 2])
    while not game_won:
        current_player = next(player_choice)
        print(f"Current Player is {current_player}")
        played = False
        while not played:
            column_choice = int(input("Which column do you want to play? (0,1,2): "))
            row_choice = int(input("Which row do you want to play? (0,1,2): "))
            game, played = game_board(game, current_player,column_choice,row_choice)
        if win(game):
            game_won = True
            again = input("Do you want to play again? (y/n) ")
            if again.lower() == 'y':
                print("Restarting")
            else:
                print("Thank you for playing")
                play = False
